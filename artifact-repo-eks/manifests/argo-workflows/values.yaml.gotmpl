server:
  serviceAccount:
    name: argo-workflows-server
    annotations:
      eks.amazonaws.com/role-arn: {{ requiredEnv "ARGO_WF_ROLE_ARN" | quote}}

controller:
  serviceAccount:
    name: argo-workflows-workflow-controller
    annotations:
      eks.amazonaws.com/role-arn: {{ requiredEnv "ARGO_WF_ROLE_ARN" | quote}}
  workflowDefaults:
    spec:
      artifactRepositoryRef:
        configMap: artifact-repositories # default is "artifact-repositories"
        key: default-s3 # default can be set by the `workflows.argoproj.io/default-artifact-repository` annotation in config map.
  persistence:
    connectionPool:
      maxIdleConns: 100
      maxOpenConns: 0
      connMaxLifetime: 0s
    nodeStatusOffLoad: true
    archive: true
    mysql:
      host: mysql
      port: 3306
      database: argo
      tableName: argo_workflows
      userNameSecret:
        name: argo-mysql-config
        key: username
      passwordSecret:
        name: argo-mysql-config
        key: password
  retentionPolicy:
    completed: 10
    failed: 3
    errored: 3

extraObjects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: argo-mysql-config
    namespace: argo-workflows
    labels:
      app: mysql
  type: Opaque 
  stringData:
    username: mysql
    password: password

artifactRepositoryRef:
  artifact-repositories:
    annotations:
      # v3.0 and after - if you want to use a specific key, put that key into this annotation.
      workflows.argoproj.io/default-artifact-repository: default-s3
    default-s3:
      archiveLogs: true
      s3:
        # If we specify roleARN, note on self-trusted policy (See: https://aws.amazon.com/jp/blogs/security/announcing-an-update-to-iam-role-trust-policy-behavior/)
        # roleARN: {{ requiredEnv "ARGO_WF_ROLE_ARN" | quote}}
        endpoint: s3.amazonaws.com
        bucket: {{ requiredEnv "S3_BUCKET_NAME" | quote}}
        # insecure will disable TLS. Primarily used for minio installs not configured with TLS
        insecure: false
        useSDKCreds: true
        encryptionOptions:
          enableEncryption: false
        keyFormat: "argo-workflows\
          /{{"{{workflow.creationTimestamp.Y}}"}}\
          /{{"{{workflow.creationTimestamp.m}}"}}\
          /{{"{{workflow.creationTimestamp.d}}"}}\
          /{{"{{workflow.name}}"}}\
          /{{"{{pod.name}}"}}"
    non-default-s3:
      archiveLogs: true
      s3:
        # If we specify roleARN, note on self-trusted policy (See: https://aws.amazon.com/jp/blogs/security/announcing-an-update-to-iam-role-trust-policy-behavior/)
        # roleARN: {{ requiredEnv "ARGO_WF_ROLE_ARN" | quote}}
        endpoint: s3.amazonaws.com
        bucket: {{ requiredEnv "S3_BUCKET_NAME" | quote}}
        # insecure will disable TLS. Primarily used for minio installs not configured with TLS
        insecure: false
        useSDKCreds: true
        encryptionOptions:
          enableEncryption: false
        keyFormat: "this-is-non-default\
          /{{ "{{workflow.creationTimestamp.Y}}" }}\
          /{{ "{{workflow.creationTimestamp.m}}" }}\
          /{{ "{{workflow.creationTimestamp.d}}" }}\
          /{{ "{{workflow.name}}" }}\
          /{{ "{{pod.name}}" }}"

# useDefaultArtifactRepo: true
# useStaticCredentials: false
# artifactRepository:
#   archiveLogs: true
#   s3:
#     endpoint: s3.amazonaws.com
#     region: ap-northeast-1
#     bucket: {{ requiredEnv "S3_BUCKET_NAME" | quote}}
#     useSDKCreds: true
#     insecure: false
 