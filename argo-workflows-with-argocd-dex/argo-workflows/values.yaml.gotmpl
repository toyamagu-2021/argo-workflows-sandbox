server:
  extraArgs:
  - --auth-mode=sso

  sso:
    rbac:
      enabled: true
    issuer: {{ requiredEnv "ARGO_CD_URL" }}/api/dex
    sessionExpiry: 240h
    clientId:
      name: argo-workflows-sso
      key: client-id
    clientSecret:
      name: argo-workflows-sso
      key: client-secret
    redirectUrl: {{ requiredEnv "ARGO_WF_URL" }}/oauth2/callback
    scopes:
    - groups
extraObjects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: argo-workflows-sso
    namespace: {{ .Release.Namespace }}
  data:
    client-id: {{ requiredEnv "ARGO_WF_CLIENT_ID" | b64enc }}
    client-secret: {{ requiredEnv "ARGO_WF_CLIENT_SECRET" | b64enc}}
  type: Opaque
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: argo-workflows-{{ requiredEnv "GITHUB_TEAM" }}
    namespace: {{ .Release.Namespace }}
    annotations:
      workflows.argoproj.io/rbac-rule: '"{{ requiredEnv "GITHUB_ORG" }}:{{ requiredEnv "GITHUB_TEAM" }}" in groups'
      workflows.argoproj.io/rbac-rule-precedence: "1"
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: argo-workflows-admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: argo-workflows-admin
  subjects:
    - kind: ServiceAccount
      name: argo-workflows-{{ requiredEnv "GITHUB_TEAM" }}
      namespace: {{ .Release.Namespace }}
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: {{ .Release.Namespace }}
    name: argo-workflows-{{ requiredEnv "GITHUB_TEAM" }}.service-account-token
    annotations:
      kubernetes.io/service-account.name: argo-workflows-{{ requiredEnv "GITHUB_TEAM" }}
  type: kubernetes.io/service-account-token  
